@mixin line-clamp($lines: 1) {
	@if $lines <=1 {
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	@else {
		overflow: hidden;
		text-overflow: ellipsis;
		display: -webkit-box;
		-webkit-line-clamp: $lines;
		-webkit-box-orient: vertical;
	}
}

@mixin interactive-states {
	transition: box-shadow 0.3s, background-color 0.3s, border-radius 0.3s,
		color 0.3s;

	&:focus {
		border-radius: 5px;
		box-shadow: 0 0 0 2px rgba($orange-900, 0.7);
	}

	&:hover {
		color: $orange-900;
		fill: $white;
	}

	&:active {
		text-shadow: 2px 2px 5px rgba($darkGreen-900, 0.5);
		box-shadow: 0 0 0 2px rgba($orange-900, 0);
		color: $darkGreen-900;
	}
}

@mixin transition-card {
	transition: border-radius 0.3s, box-shadow 0.3s, opacity 0.3s;
}

@mixin focus-card {
	border-radius: 8px;
	box-shadow: 0 0 10px 2px rgba($orange-900, 0.9);
	opacity: 1;
}

@mixin hover-card {
	border-radius: 10px;
	box-shadow: 0 3px 15px 0 $orange-900;
	opacity: 0.5;
}

@mixin active-card {
	border-radius: 6px;
	box-shadow: 0 0 20px 4px rgba($orange-900, 1);
	opacity: 0.9;
}

@mixin burger($burgerWidth, $burgerHeight, $burgerLineHeight, $burgerColor) {
	width: $burgerWidth;
	height: $burgerHeight;
	position: relative;
	color: $burgerColor;

	.burger__line {
		position: absolute;
		display: block;
		left: 0;
		top: 50%;
		transform: translateY(-50%);
		width: 100%;
		border-radius: 50px;
		height: $burgerLineHeight;
		background-color: currentColor;
		transition: transform 0.3s ease-in-out;
	}

	&::before,
	&::after {
		content: '';
		position: absolute;
		z-index: 1;
		left: 0;
		width: 100%;
		height: $burgerLineHeight;
		border-radius: 50px;
		background-color: currentColor;
		transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
	}

	&::before {
		top: 0;
	}

	&::after {
		top: calc(100% - #{$burgerLineHeight});
	}

	&--active {
		.burger__line {
			transform: scale(0);
			transition: transform 0.3s ease-in-out;
		}

		&::before {
			transform: rotate(45deg);
			top: 50%;
			transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
		}

		&::after {
			transform: rotate(-45deg);
			top: 50%;
			transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
		}
	}
}



@mixin mq($width, $type: max) {
	@if map-has-key($breakpoints, $width) {
		$width: map-get($breakpoints, $width);

		@if $type ==max {
			$width: $width - 1px;
		}
	}

	@media only screen and (#{$type}-width: $width) {
		@content;
	}
}